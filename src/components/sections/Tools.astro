---
import tools from '../../data/tools.json' assert { type: 'json' };
import ToolCard from '../generic/ToolCard.astro';
---
<section id="tools" class="bg-gray-100 py-20">
    <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-center mb-12">Mes Outils</h2>
        
        <div class="flex justify-center mb-8 space-x-4">
            <select id="category-filter" class="px-4 py-2 border rounded">
                <option value="">Toutes Catégories</option>
                <option value="Langage">Langages</option>
                <option value="Framework">Frameworks</option>
                <option value="Logiciel">Logiciels</option>
            </select>
            
            <select id="experience-filter" class="px-4 py-2 border rounded">
                <option value="0">Tous Niveaux</option>
                <option value="1">Bases</option>
                <option value="2">Bonnes notions</option>
                <option value="3">Autonome</option>
                <option value="4">Confirmé</option>
            </select>
        </div>

        <div id="tools-grid" class="grid md:grid-cols-5 gap-6 max-w-4xl mx-auto overflow-y-auto max-h-[500px]">
            {tools
            .sort((a, b) => b.experienceLevel - a.experienceLevel)
            .map((tool) => (
                <ToolCard 
                    name={tool.name} 
                    iconUrl={tool.iconUrl} 
                    image={tool.image} 
                    category={tool.category} 
                    experienceLevel={tool.experienceLevel} 
                />
            ))}
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const categoryFilter = document.getElementById('category-filter');
        const experienceFilter = document.getElementById('experience-filter');
        const toolCards = document.querySelectorAll('.tool-card');

        function filterTools() {
            const selectedCategory = categoryFilter ? (categoryFilter as HTMLSelectElement).value : '';
            const selectedExperience = parseInt((experienceFilter as HTMLSelectElement).value);

            toolCards.forEach(card => {
                const cardCategory = card.getAttribute('data-category');
                const cardExperience = parseInt(card.getAttribute('data-experience') || '0');

                const categoryMatch = !selectedCategory || cardCategory === selectedCategory;
                const experienceMatch = !selectedExperience || cardExperience === selectedExperience;

                (card as HTMLElement).style.display = (categoryMatch && experienceMatch) ? 'block' : 'none';
            });
        }

        if (categoryFilter) {
            categoryFilter.addEventListener('change', filterTools);
        }
        if (experienceFilter) {
            experienceFilter.addEventListener('change', filterTools);
        }
    });
</script>